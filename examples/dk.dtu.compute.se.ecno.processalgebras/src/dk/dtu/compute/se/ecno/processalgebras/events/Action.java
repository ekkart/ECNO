/**
 * This is an automatically generated class. It was generated by the
 * ECNO framework. It defines an Event_Value class.
 */
package dk.dtu.compute.se.ecno.processalgebras.events;

import java.util.Collection;
import java.util.Collections;
import java.util.List;

import dk.dtu.imm.se.ecno.core.IEventType;
import dk.dtu.imm.se.ecno.core.IFormalParameter;
import dk.dtu.imm.se.ecno.runtime.Event; 
import dk.dtu.imm.se.ecno.runtime.Event_Values;

public class Action extends Event_Values  {

	final public dk.dtu.compute.se.emf.processalgebra.ActionDef action;
	final public dk.dtu.compute.se.emf.processalgebra.ProcessInstance pos;
	final public dk.dtu.compute.se.emf.processalgebra.ProcessInstance neg;
	final public Collection<dk.dtu.compute.se.emf.processalgebra.ProcessInstance> processes;
	final public Collection<dk.dtu.compute.se.emf.processalgebra.ProcessInstance> terminating;

	@SuppressWarnings("unchecked")
	public Action(IEventType type, Event event) {
		super(type.getDirectSuperType(), event);
		List<IFormalParameter> formalParameters = type.getFormalParametersList();           	
	    action = (dk.dtu.compute.se.emf.processalgebra.ActionDef) event.getParameter(formalParameters.get(0)).getValue();
	    pos = (dk.dtu.compute.se.emf.processalgebra.ProcessInstance) event.getParameter(formalParameters.get(1)).getValue();
	    neg = (dk.dtu.compute.se.emf.processalgebra.ProcessInstance) event.getParameter(formalParameters.get(2)).getValue();
	    processes = Collections.unmodifiableCollection((Collection<dk.dtu.compute.se.emf.processalgebra.ProcessInstance>) event.getParameter(formalParameters.get(3)).getValue());
	    terminating = Collections.unmodifiableCollection((Collection<dk.dtu.compute.se.emf.processalgebra.ProcessInstance>) event.getParameter(formalParameters.get(4)).getValue());
	}
}
