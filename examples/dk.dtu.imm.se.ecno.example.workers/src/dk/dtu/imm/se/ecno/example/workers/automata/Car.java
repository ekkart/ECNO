/**
 * This is an automatically generated class. It was generated by the
 * Petri net component of the ECNO framework. This class defines
 * the behaviour of an element, as defined by the Petri net.
 */
package dk.dtu.imm.se.ecno.example.workers.automata;

import org.eclipse.emf.ecore.EObject;

import dk.dtu.imm.se.ecno.model.runtime.ecnonets.AbstractPetrinetBehaviour;
import dk.dtu.imm.se.ecno.model.runtime.ecnonets.PetriNetChoice;
import dk.dtu.imm.se.ecno.runtime.ParentAction;
import dk.dtu.imm.se.ecno.core.IElementType;
import dk.dtu.imm.se.ecno.core.IPackageAdapter;
import dk.dtu.imm.se.ecno.engine.ExecutionEngine;

/**
 * @see-ecnogen platform:/resource/dk.dtu.imm.se.ecno.example.workers/models/workers.ecnogen
 */
@SuppressWarnings("unused")
public class Car extends AbstractPetrinetBehaviour<dk.dtu.imm.se.emf.example.workers.Car> {
	
	public Car(ExecutionEngine engine, IElementType type,  EObject element) {
		super(engine, (dk.dtu.imm.se.emf.example.workers.Car) element, new int[]{1, 0}, new String[]{"t2", "t1"}, type );
	}
	
	@Override
	public boolean enabled(int t) {
		switch (t) {
		case 0:
			return marking.get(1) >= 1;

		case 1:
			return marking.get(0) >= 1;

		default:
			return false;
		}
	}
	
	@Override
	public void consumeTokens(int t, int[] m) {
		switch (t) {
		case 0:
			m[1]--;
			break;

		case 1:
			m[0]--;
			break;

		}
	}

	@Override
	public boolean dropParentChoice(int t) {
		switch (t) {
		case 0:
			return false;
		case 1:
			return false;
		default:
			return false;
		}
	}

	@Override
	public void fireImpl(int t) {
		if (! enabled(t))
			return;
		
		switch (t) {
		case 0:
			marking.set(1, marking.get(1) - 1);
			marking.set(0,  marking.get(0) + 1);
			break;
			
		case 1:
			marking.set(0, marking.get(0) - 1);
			marking.set(1,  marking.get(1) + 1);
			break;
			
		}
	}
	
	@Override
	public String[] getTransitionEventParameterNames(int transition, int event) {
		switch (transition) {
		case 0:
			switch (event) {
			case 0:
				return new String[] {  };
			default: return new String[] {};
			}
		case 1:
			switch (event) {
			case 0:
				return new String[] {  };
			default: return new String[] {};
			}
		default: return new String[] {};
		}
	}

	@Override
	public Object getParamAssignment(PetriNetChoice choice, int event, int param) {
		int transition = choice.getTransition();
		// Note that this attribute self will be deleted in future versions 
		// of the ECNO code generator for ECNO nets. Therefore, the method
		// self() should be used instead of the variable self in your 
		// ECNO Net Java code snippets.
		dk.dtu.imm.se.emf.example.workers.Car self = self();

		switch (transition) {
		case 0: {
			switch (event) {
			case 0:
				switch (param) {
				default: return null;
				}
			default: return null;
			}
		}
		case 1: {
			switch (event) {
			case 0:
				switch (param) {
				default: return null;
				}
			default: return null;
			}
		}
		default: return null;
		}
	}

	@Override
	public boolean evaluateCondition(PetriNetChoice choice) {
		int transition = choice.getTransition();
		// Note that this attribute self will be deleted in future versions 
		// of the ECNO code generator for ECNO nets. Therefore, the method
		// self() should be used instead of the variable self in your 
		// ECNO Net Java code snippets.
		dk.dtu.imm.se.emf.example.workers.Car self = self();

		switch (transition) {
		case 0: {
			/**
			 * @see-pnml-start 
			 */
			return true;
			/**
			 * @see-pnml-end 
			 */
		}
		case 1: {
			/**
			 * @see-pnml-start 
			 */
			return true;
			/**
			 * @see-pnml-end 
			 */
		}
		default: return false;
		}
	}

	@Override
	public void executeAction(PetriNetChoice choice) {
		int transition = choice.getTransition();
		ParentAction parent = new ParentAction(choice);
		// Note that this attribute self will be deleted in future versions 
		// of the ECNO code generator for ECNO nets. Therefore, the method
		// self() should be used instead of the variable self in your 
		// ECNO Net Java code snippets.
		dk.dtu.imm.se.emf.example.workers.Car self = self();
		
		switch (transition) {
		case 0: {

			/**
			 * @see-pnml-start 
			 */
/* DO NOTHING */
			/**
			 * @see-pnml-end 
			 */
			fire(transition);
			return; 
		}
		case 1: {

			/**
			 * @see-pnml-start 
			 */
/* DO NOTHING */
			/**
			 * @see-pnml-end 
			 */
			fire(transition);
			return; 
		}
		default: return;
		}
	}

	@Override
	public String[] getTransitionEvents(int transition) {
			switch (transition) {
		case 0:
			return new String[] { "depart" };
		case 1:
			return new String[] { "arrive" };
		default: return null;
		}
	}

}

