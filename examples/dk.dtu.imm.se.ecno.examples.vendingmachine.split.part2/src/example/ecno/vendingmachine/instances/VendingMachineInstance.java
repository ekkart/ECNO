/**
 * This is an automatically generated class. It was generated by the
 * ECNO framework. This class defines an ECNO Instance which can
 * be started via the main method (Run As -> Java Application).
 */
package example.ecno.vendingmachine.instances;

import dk.dtu.imm.se.ecno.engine.ExecutionEngine;
import dk.dtu.imm.se.ecno.gui.ECNOGUI;

public class VendingMachineInstance {

    final private example.emf.vendingmachine.VendingmachineFactory factory;
    final private example.emf.vendingmachineoutput.VendingmachineoutputFactory factory2;

	public VendingMachineInstance() {
		factory = example.emf.vendingmachine.VendingmachineFactory.eINSTANCE;
		factory2 = example.emf.vendingmachineoutput.VendingmachineoutputFactory.eINSTANCE;
	}

	private void createInstance(ExecutionEngine engine) {
		// Create the objects
        example.emf.vendingmachine.Slot o1 = factory.createSlot();
        example.emf.vendingmachine.Safe o2 = factory.createSafe();
        example.emf.vendingmachine.Panel o3 = factory.createPanel();
        example.emf.vendingmachine.Control o4 = factory.createControl();
        example.emf.vendingmachine.Brewer o5 = factory.createBrewer();
        example.emf.vendingmachine.Brewer o6 = factory.createBrewer();
        example.emf.vendingmachine.Brewer o7 = factory.createBrewer();
        example.emf.vendingmachineoutput.Output o8 = factory2.createOutput();
        example.emf.vendingmachine.Coin o9 = factory.createCoin();
        example.emf.vendingmachine.Coin o10 = factory.createCoin();
        example.emf.vendingmachine.Coin o11 = factory.createCoin();	

		// Set the (simple) attributes	
   
		// Create the single references
        o1.setSafe(o2);
        o5.setControl(o4);
        o6.setControl(o4);
        o7.setControl(o4);	

		// Create the multi references
        o3.getControl().add(o4);
        o4.getSlot().add(o1);
        o8.getBrewer().add(o5);
        o8.getBrewer().add(o6);
        o8.getBrewer().add(o7);
        o9.getSlot().add(o1);
        o10.getSlot().add(o1);
        o11.getSlot().add(o1);	
   		
		// Register the GUI objects with the controllers (objects 
		// not visible at a GUI will be added to the engine on the fly)
        engine.addElement(o3);
        engine.addElement(o8);
        engine.addElement(o9);
        engine.addElement(o10);
        engine.addElement(o11);
	}

    public static void main(String[] args) {
    	ExecutionEngine engine = ExecutionEngine.createNewInstance();	
    	engine.addPackageAdapter(example.ecno.vendingmachine.coordination.VendingMachineModel.getModel(engine));
    	engine.addPackageAdapter(example.ecno.vendingmachine.output.coordination.VendingMachineOutputModel.getModel(engine));
    	engine.resolveNamespaceImports();
    	new ECNOGUI(engine);        	
    	VendingMachineInstance instance = new VendingMachineInstance();
    	instance.createInstance(engine);
    }

}
