/**
 * This is an automatically generated class. It was generated by the
 * ECNO framework. This class defines ECNO Model and provides the
 * adapter to the ECNO EMF engine.
 */
package example.ecno.vendingmachine.brewer.coordination;

import org.eclipse.emf.common.util.EList;

import example.emf.vendingmachinebrewers.VendingmachinebrewersPackage;
import example.ecno.vendingmachine.brewer.automata.VendingMachineBrewerBehaviour;

import dk.dtu.imm.se.ecno.core.IEventType;
import dk.dtu.imm.se.ecno.core.IEventTypeExtension;

import dk.dtu.imm.se.ecno.engine.ExecutionEngine;
import dk.dtu.imm.se.ecno.runtime.EventExtension_Values;
import dk.dtu.imm.se.ecno.runtime.Event_Values;

import dk.dtu.imm.se.ecno.model.adapter.EMFPackageAdapter;
import dk.dtu.imm.se.ecno.model.ecno.EcnoFactory;
import dk.dtu.imm.se.ecno.model.ecno.ElementType;
import dk.dtu.imm.se.ecno.model.ecno.EventType;
import dk.dtu.imm.se.ecno.model.ecno.FormalParameter;

public class VendingMachineModel extends EMFPackageAdapter {

	private FormalParameter formalparameter_coffee_strength;
	private FormalParameter formalparameter_tea_name;

	private EventType eventtype_drink;
	private EventType eventtype_coffee;
	private EventType eventtype_tea;
	private EventType eventtype_cup_in;
	private EventType eventtype_reset;
	private EventType eventtype_cancel;
	private EventType eventtype_kick;


	private ElementType elementtype_CoffeeBrewer;
	private ElementType elementtype_TeaBrewer;
	private ElementType elementtype_Brewer;



	private VendingMachineModel(ExecutionEngine engine) {
		super (new VendingMachineBrewerBehaviour(engine));
		createModel();
	}

	protected void createModel() {
		EcnoFactory ecno_factory = EcnoFactory.eINSTANCE;
		VendingmachinebrewersPackage pack = VendingmachinebrewersPackage.eINSTANCE;

		getNamespace().setEPackage(pack);
		getNamespace().setUri("example.ecno.vendingmachine.brewers");

		formalparameter_coffee_strength = ecno_factory.createFormalParameter();
		formalparameter_coffee_strength.setName("strength");
		formalparameter_coffee_strength.setEType(org.eclipse.emf.ecore.EcorePackage.eINSTANCE.getEInt());
		formalparameter_tea_name = ecno_factory.createFormalParameter();
		formalparameter_tea_name.setName("name");
		formalparameter_tea_name.setEType(org.eclipse.emf.ecore.EcorePackage.eINSTANCE.getEString());

		EList<FormalParameter> parameters;
		
		eventtype_drink = ecno_factory.createEventType();
		eventtype_drink.setName("drink");
		eventtype_drink.setPackageURI("example.ecno.vendingmachine");
		eventtype_drink.setTypeName("drink");
		addEventType(eventtype_drink);

		eventtype_coffee = ecno_factory.createEventType();
		eventtype_coffee.setName("coffee");
		parameters = eventtype_coffee.getParameters();
		parameters.add(formalparameter_coffee_strength);
		addEventType(eventtype_coffee);

		eventtype_tea = ecno_factory.createEventType();
		eventtype_tea.setName("tea");
		parameters = eventtype_tea.getParameters();
		parameters.add(formalparameter_tea_name);
		addEventType(eventtype_tea);

		eventtype_cup_in = ecno_factory.createEventType();
		eventtype_cup_in.setName("cup_in");
		eventtype_cup_in.setPackageURI("example.ecno.vendingmachine");
		eventtype_cup_in.setTypeName("cup_in");
		addEventType(eventtype_cup_in);

		eventtype_reset = ecno_factory.createEventType();
		eventtype_reset.setName("reset");
		eventtype_reset.setPackageURI("example.ecno.vendingmachine");
		eventtype_reset.setTypeName("reset");
		addEventType(eventtype_reset);

		eventtype_cancel = ecno_factory.createEventType();
		eventtype_cancel.setName("cancel");
		eventtype_cancel.setPackageURI("example.ecno.vendingmachine");
		eventtype_cancel.setTypeName("cancel");
		addEventType(eventtype_cancel);

		eventtype_kick = ecno_factory.createEventType();
		eventtype_kick.setName("kick");
		addEventType(eventtype_kick);

		eventtype_coffee.setSuper(eventtype_drink);
		eventtype_tea.setSuper(eventtype_drink);
		eventtype_kick.setSuper(eventtype_cancel);


		elementtype_CoffeeBrewer = ecno_factory.createElementType();
		elementtype_CoffeeBrewer.setEClass(pack.getCoffeeBrewer());
		addElementType(elementtype_CoffeeBrewer);

		elementtype_TeaBrewer = ecno_factory.createElementType();
		elementtype_TeaBrewer.setEClass(pack.getTeaBrewer());
		addElementType(elementtype_TeaBrewer);

		elementtype_Brewer = ecno_factory.createElementType();
		elementtype_Brewer.setPackageURI("example.ecno.vendingmachine");
		elementtype_Brewer.setTypeName("Brewer");
		addElementType(elementtype_Brewer);


		elementtype_CoffeeBrewer.setSuper(elementtype_Brewer);
		elementtype_TeaBrewer.setSuper(elementtype_Brewer);


	}

	public Class<? extends Event_Values> getEventValuesClass(IEventType type) {
		if (type.equals(eventtype_coffee)) {
			return example.ecno.vendingmachine.brewer.events.Coffee.class;
		} else if (type.equals(eventtype_tea)) {
			return example.ecno.vendingmachine.brewer.events.Tea.class;
		} else {
			return null;
		}
	}

	public Class<? extends EventExtension_Values> getEventValuesClass(IEventTypeExtension eventTypeExtension) {
		{
			return null;
		}
	}

	public static VendingMachineModel getModel(ExecutionEngine engine) {
		return new VendingMachineModel(engine);
	}

}
