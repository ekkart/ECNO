/**
 * This is an automatically generated class. It was generated by the
 * Petri net component of the ECNO framework. This class defines
 * the behaviour of a element, as defined by the Petri net.
 */
package workflow.automata;

import dk.dtu.imm.se.ecno.engine.ExecutionEngine;

import workflow.WorkflowPackage;
import dk.dtu.imm.se.ecno.model.adapter.EMFBehaviourAdaptor;
import dk.dtu.imm.se.ecno.model.runtime.SimpleEMFBehaviour;

public class WorkflowBehavior extends EMFBehaviourAdaptor {

	public WorkflowBehavior(ExecutionEngine engine) {
		super(engine);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getProcess(), Process.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getAgent(), Agent.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getActivityO(), ActivityO.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getActivity(), Activity.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getTransition(), Transition.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getArc(), Arc.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getPlace(), Place.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getActivityC(), ActivityC.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getCase(), Case.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getCaseO(), CaseO.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getCaseC(), CaseC.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getMarking(), Marking.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getTask(), Task.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getPetriNet(), PetriNet.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getCaseI(), CaseI.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getInformation(), Information.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getTaskI(), TaskI.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getDefaultDocumentDescriptor(), DefaultDocumentDescriptor.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getActivityI(), ActivityI.class);		
		this.addElementBehaviour(WorkflowPackage.eINSTANCE.getDefaultDocumentCondition(), DefaultDocumentCondition.class);		
		
		this.addPackage(WorkflowPackage.eINSTANCE, SimpleEMFBehaviour.class);
	}

}