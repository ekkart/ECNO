<%@ jet package="dk.dtu.imm.se.ecno.model.generator.internal.jet.translated"
    class="ECNO_Event2J"
    skeleton="ECNO_Event2JSkeleton.java" 
%>
<% 
   initialize(argument);
%>
/**
 * This is an automatically generated class. It was generated by the
 * ECNO framework. It defines an Event_Value class.
 */
<% if (!packageName.equals("")) { %>
package <%= packageName %>;
<% } %>

<% if (event.getParameters().size() > 0) { %>
<%   if (eventcontext.hasOwnCollectiveParameters()) { %>
import java.util.Collection;
import java.util.Collections;
<%   } %>
import java.util.List;

import dk.dtu.imm.se.ecno.core.IEventType;
import dk.dtu.imm.se.ecno.core.IFormalParameter;
import dk.dtu.imm.se.ecno.runtime.Event;
<% } else { %>
import dk.dtu.imm.se.ecno.core.IEventType;
import dk.dtu.imm.se.ecno.runtime.Event;
<% } %> 
<% if (superClassName.equals("Event_Values")) { %>
import dk.dtu.imm.se.ecno.runtime.Event_Values;
<% } %>

public class <%= className %> extends <%= superClassName %>  {

<% for (FormalParameter param: event.getParameters()) {
    EClassifier classifier = param.getEType(); %>
	final public <%= param.isCollective() ? "Collection<" : "" %><%= context.getQualifiedClassName(classifier) %><%= param.isCollective() ? ">" : "" %> <%= param.getName() %>;
<% } %>

<% if (eventcontext.hasOwnCollectiveParameters()) { %>
	@SuppressWarnings("unchecked")
<% } %>
	public <%= className %>(IEventType type, Event event) {
		super(type.getDirectSuperType(), event);
<% if (event.getParameters().size() > 0) { %>
		List<IFormalParameter> formalParameters = type.getFormalParametersList();           	
<%   int i = 0;
     for (FormalParameter param: event.getParameters()) {
       EClassifier classifier = param.getEType();
       if (param.isCollective()) { %>
	    <%= param.getName() %> = Collections.unmodifiableCollection((Collection<<%= context.getQualifiedClassName(classifier) %>>) event.getParameter(formalParameters.get(<%= i++ %>)).getValue());
<%     } else { %>
	    <%= param.getName() %> = (<%= context.getQualifiedClassName(classifier) %>) event.getParameter(formalParameters.get(<%= i++ %>)).getValue();
<%     }
     }
   } %>
	}
<% if (!superClassName.equals("Event_Values")) { %>

	@Override
	public <%= superClassName %> super_() {
		return this;
	}

<% } %>
}
